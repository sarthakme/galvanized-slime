version: 2.1
# Node is required to run and test the project
# AWS CLI is required to deploy the built Angular files onto an S3 bucket
# AWS EB CLI is required to deploy the API to Elastic Beanstalk
orbs:
    node: circleci/node@4.1.0
    aws-cli: circleci/aws-cli@1.3.1
    aws-ebcli: circleci/aws-elastic-beanstalk@2.0.1
jobs:
    build-deploy:
        docker:
            - image: cimg/base:stable
        steps:
        # Setting up the orbs and configuring them using environment variables
            - node/install
            - aws-cli/setup
            - aws-ebcli/setup
            - checkout
            - run:
            # Installing the dependencies of the Angular frontend to be able to build it
                name: install-ui
                command: |
                    npm run frontend:install
            - run:
            # Installing the dependencies of the Express backend to be able to build and test it
                name: install-server
                command: |
                    npm run backend:install
            - run:
            # Building the Angular frontend to obtain static files
                name: build-ui
                command: |
                    npm run frontend:build
            - run:
            # Transpiling the Express backend to obtain JavaScript files
                name: build-server
                command: |
                    npm run backend:build
            - run:
                name: test-server
                command: |
                    npm run backend:test
                environment:
                    ENV: test
            - run:
            # Uploading the static files into the S3 bucket
                name: deploy-ui
                command: |
                    npm run frontend:deploy
            - run:
            # Uploading the JavaScript files into the Elastic Beanstalk application
                name: deploy-backend
                command: |
                    cd Backend
                    eb setenv POSTGRES_HOST=${POSTGRES_HOST} POSTGRES_DB=${POSTGRES_DB} POSTGRES_USER=${POSTGRES_USER} POSTGRES_PASSWORD=${POSTGRES_PASSWORD} ENV=${ENV}
                    eb deploy
                    cd ..